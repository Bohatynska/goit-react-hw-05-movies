{"version":3,"file":"static/js/779.7779f4e2.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAF5D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBT,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCQ,EADnC,gCAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,oBACMV,EADN,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,4BACcV,EADd,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKS,MALlB,gCAOHP,QAAQC,MAAR,MAPG,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,4BACcV,EADd,2BAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gF,qEC9CMQ,E,OAAQC,QAAAA,EAAH,iE,SCALC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,SAACH,EAAD,UAAQG,GAAtB,C,2KCAfC,EAAUH,EAAAA,QAAAA,IAAH,6CAIPI,EAAaJ,EAAAA,QAAAA,GAAH,2CAIVK,EAASL,EAAAA,QAAAA,EAAH,kEAKNM,EAAaN,EAAAA,QAAAA,EAAH,sFAMVO,EAAOP,EAAAA,QAAAA,EAAH,+D,SC6BjB,EAtCgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcsB,EAAd,KAHoB,wCAKpB,WAAgCC,GAAhC,wFAC4BhB,EAAAA,EAAAA,IAAegB,GAD3C,WACQC,EADR,QAGmBC,OAHnB,uBAIIH,GAAS,GAJb,0BAOED,EAAWG,GACXF,GAAS,GARX,4CALoB,sBAoBpB,OAJAI,EAAAA,EAAAA,YAAU,YAhBU,oCAiBlBC,CAAiBV,EAClB,GAAE,CAACA,KAGF,UAACL,EAAD,WACGZ,IAAS,SAAC,IAAD,CAAcW,KAAM,qCACnB,IAAVX,IACC,wBACGoB,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,QAAvB,OACX,UAAClB,EAAD,YACE,SAACC,EAAD,UAASe,KACT,SAACd,EAAD,UAAa,IAAIiB,KAAKF,GAAYG,oBAClC,SAACjB,EAAD,UAAOe,MAHQF,EADN,QAWtB,C","sources":["Api/Api.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErorrMessage.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["/* key= '003c13e6e40e640c229ce092669f5920' */\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '003c13e6e40e640c229ce092669f5920';\n\nexport async function fetchTrendyFilms() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFilmsByName(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmInformation(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmCredits(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmReviews(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const Error = styled.p`\n  font-size: 30px;\n  font-weight: 400;\n`;\n","import { Error } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ text }) => <Error>{text}</Error>;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ReviewItem = styled.li`\n  color: #551f78;\n`;\n\nexport const Author = styled.p`\n  font-size: 15px;\n  font-weight: bold;\n`;\n\nexport const DateReview = styled.p`\n  font-size: 12px;\n  color: #551f78;\n  margin-bottom: 7px;\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  color: #551f78;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmReviews } from 'Api/Api';\nimport { ErrorMessage } from 'components/ErrorMessage/ErorrMessage';\nimport {\n  Wrapper,\n  ReviewItem,\n  Author,\n  DateReview,\n  Text,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  async function createReviewList(id) {\n    const reviewsList = await getFilmReviews(id);\n\n    if (!reviewsList.length) {\n      setError(true);\n      return;\n    }\n    setReviews(reviewsList);\n    setError(false);\n  }\n\n  useEffect(() => {\n    createReviewList(movieId);\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {error && <ErrorMessage text={'Sorry, there are no reviews yet'} />}\n      {error === false && (\n        <ul>\n          {reviews.map(({ author, created_at, content }) => (\n            <ReviewItem key={author}>\n              <Author>{author}</Author>\n              <DateReview>{new Date(created_at).toLocaleString()}</DateReview>\n              <Text>{content}</Text>\n            </ReviewItem>\n          ))}\n        </ul>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchTrendyFilms","response","data","results","console","error","fetchFilmsByName","query","getFilmInformation","filmId","getFilmCredits","cast","getFilmReviews","Error","styled","ErrorMessage","text","Wrapper","ReviewItem","Author","DateReview","Text","movieId","useParams","useState","reviews","setReviews","setError","id","reviewsList","length","useEffect","createReviewList","map","author","created_at","content","Date","toLocaleString"],"sourceRoot":""}