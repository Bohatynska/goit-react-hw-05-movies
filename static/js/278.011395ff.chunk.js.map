{"version":3,"file":"static/js/278.011395ff.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAF5D,cAEGE,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBT,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCQ,EADnC,gCAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,oBACMV,EADN,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,4BACcV,EADd,oBAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKS,MALlB,gCAOHP,QAAQC,MAAR,MAPG,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,gGAEoBX,EAAAA,EAAAA,IAAA,gBACZW,EADY,4BACcV,EADd,2BAFpB,cAEGE,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gF,kFC9CMQ,E,OAAYC,QAAAA,GAAH,mI,SCATC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,SAACH,EAAD,UAAYG,GAA1B,E,QCSrB,EARa,WACX,OACE,6BACE,SAACD,EAAD,CAAOC,KAAM,oBACb,SAACC,EAAA,EAAD,MAGL,C,0KCRYC,EAAOJ,EAAAA,QAAAA,GAAH,wRAaJK,EAAYL,EAAAA,QAAAA,GAAH,qJAUTM,EAASN,EAAAA,QAAAA,IAAH,0D,SCjBNG,EAAY,SAAC,GAAc,IAAZI,EAAW,EAAXA,KAC1B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAmC,MAAtBF,EAASG,SAAmB,UAAY,GAHtB,wCAKrC,qGAC6B5B,EAAAA,EAAAA,MAD7B,UACQ6B,EADR,wDAMEL,EAAUK,GANZ,4CALqC,sBAsBrC,OARAC,EAAAA,EAAAA,YAAU,WACJT,EACFG,EAAUH,GAhBuB,mCAmBnCU,EACD,GAAE,CAACV,KAGF,0BACE,SAACH,EAAD,UACGK,EAAOS,KACN,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,EAA2BC,aAA3B,EAAyCC,aAAzC,OACE,SAAClB,EAAD,WACE,SAAC,KAAD,CAASmB,GAAE,UAAKX,GAAL,OAAkBM,GAAMM,MAAO,CAAEC,KAAMf,GAAlD,UACE,SAACL,EAAD,CACEqB,IAAKP,EAAcQ,EAAAA,EAASR,EAAcS,EAC1CC,IAAKT,OAJKF,EADlB,OAcT,C,sDChDM,IAAMS,EAAS,iC","sources":["Api/Api.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","Pages/Home.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","services/url.jsx"],"sourcesContent":["/* key= '003c13e6e40e640c229ce092669f5920' */\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '003c13e6e40e640c229ce092669f5920';\n\nexport async function fetchTrendyFilms() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFilmsByName(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmInformation(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmCredits(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmReviews(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  font-weight: 600;\n  font-size: 35px;\n  margin-bottom: 40px;\n  color: #551f78;\n`;\n","import { MainTitle } from './Title.styled';\n\nexport const Title = ({ text }) => <MainTitle>{text}</MainTitle>;\n","import { Title } from 'components/Title/Title';\nimport { MovieList } from '../components/MovieList/MovieList';\n\nconst Home = () => {\n  return (\n    <main>\n      <Title text={'Trending today'} />\n      <MovieList />\n    </main>\n  );\n};\nexport default Home;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  position: relative;\n  overflow: hidden;\n  border-radius: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 360px;\n`;\n","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { fetchTrendyFilms } from 'Api/Api';\nimport { imgUrl } from 'services/url';\nimport poster from '../../img/image-not-found.jpg';\n\nimport { List, MovieItem, Poster } from './MovieList.styled';\n\nexport const MovieList = ({ list }) => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const currentUrl = location.pathname === '/' ? 'movies/' : '';\n\n  async function createMovieList() {\n    const trendyMovies = await fetchTrendyFilms();\n\n    if (!trendyMovies) {\n      return;\n    }\n    setMovies(trendyMovies);\n  }\n\n  useEffect(() => {\n    if (list) {\n      setMovies(list);\n      return;\n    }\n    createMovieList();\n  }, [list]);\n\n  return (\n    <div>\n      <List>\n        {movies.map(\n          ({ id, poster_path, title, release_date, vote_average }) => (\n            <MovieItem key={id}>\n              <NavLink to={`${currentUrl}${id}`} state={{ from: location }}>\n                <Poster\n                  src={poster_path ? imgUrl + poster_path : poster}\n                  alt={title}\n                ></Poster>\n              </NavLink>\n            </MovieItem>\n          )\n        )}\n      </List>\n    </div>\n  );\n};\n","export const imgUrl = 'https://image.tmdb.org/t/p/w500';\n"],"names":["axios","API_KEY","fetchTrendyFilms","response","data","results","console","error","fetchFilmsByName","query","getFilmInformation","filmId","getFilmCredits","cast","getFilmReviews","MainTitle","styled","Title","text","MovieList","List","MovieItem","Poster","list","useState","movies","setMovies","location","useLocation","currentUrl","pathname","trendyMovies","useEffect","createMovieList","map","id","poster_path","title","release_date","vote_average","to","state","from","src","imgUrl","poster","alt"],"sourceRoot":""}