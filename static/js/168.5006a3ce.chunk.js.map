{"version":3,"file":"static/js/168.5006a3ce.chunk.js","mappings":"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","sources":["Api/Api.jsx","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","services/url.jsx"],"sourcesContent":["/* key= '003c13e6e40e640c229ce092669f5920' */\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '003c13e6e40e640c229ce092669f5920';\n\nexport async function fetchTrendyFilms() {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchFilmsByName(query) {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmInformation(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmCredits(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getFilmReviews(filmId) {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { NavLink, Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const LinkBack = styled(Link)`\n  position: absolute;\n  left: 30px;\n  top: 70px;\n  height: 40px;\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  &:hover,\n  &:focus {\n    color: #af7dd0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: auto 1fr;\n`;\n\nexport const ImageWrapp = styled.div`\n  width: 360px;\n  margin-right: 40px;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n`;\n\nexport const MovieName = styled.h2`\n  font-weight: 600;\n  font-size: 35px;\n  margin-bottom: 20px;\n  color: #551f78;\n`;\n\nexport const CategoryItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:last-child {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Category = styled.p`\n  color: #551f78;\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nexport const Description = styled.span`\n  font-weight: 400;\n  color: #551f78;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-bottom: 15px;\n  font-weight: 600;\n  font-size: 25px;\n  color: #551f78;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n`;\n\nexport const InfoItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 50px;\n  }\n`;\n\nexport const InfoLink = styled(NavLink)`\n  color: #551f78;\n  font-weight: 500;\n  font-size: 20px;\n  &:hover,\n  &:focus {\n    color: #af7dd0;\n    font-weight: 600;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getFilmInformation } from 'Api/Api';\nimport { imgUrl } from 'services/url';\nimport poster from '../../img/image-not-found.jpg';\nimport { Loader } from '../../components/Loader';\n\nimport {\n  LinkBack,\n  Wrapper,\n  ImageWrapp,\n  Poster,\n  MovieName,\n  CategoryItem,\n  Category,\n  Description,\n  InfoTitle,\n  InfoList,\n  InfoItem,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getFilmInformation(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n    runtime,\n    spoken_languages,\n  } = movie;\n\n  return (\n    <>\n      <LinkBack to={backLinkHref}>Go Back</LinkBack>\n      <Wrapper>\n        <ImageWrapp>\n          <Poster\n            src={poster_path ? imgUrl + poster_path : poster}\n            alt={title}\n          />\n        </ImageWrapp>\n        <div>\n          <MovieName>{original_title}</MovieName>\n          <ul>\n            <CategoryItem>\n              <Category>\n                User Score:{' '}\n                <Description rating={vote_average}>\n                  {vote_average.toFixed(1)}\n                </Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Release Date: <Description>{release_date}</Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Overview: <Description>{overview}</Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Genres:\n                {genres.map(({ name }) => (\n                  <Description key={name}> {name}</Description>\n                ))}\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Film duration: <Description>{runtime} min</Description>\n              </Category>\n            </CategoryItem>\n            <CategoryItem>\n              <Category>\n                Languages:\n                {spoken_languages.map(({ name }) => (\n                  <Description key={name}> {name}</Description>\n                ))}\n              </Category>\n            </CategoryItem>\n          </ul>\n          <InfoTitle>Additional information</InfoTitle>\n          <InfoList>\n            <InfoItem>\n              <InfoLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </InfoLink>\n            </InfoItem>\n            <InfoItem>\n              <InfoLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </InfoLink>\n            </InfoItem>\n          </InfoList>\n        </div>\n      </Wrapper>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export const imgUrl = 'https://image.tmdb.org/t/p/w500';\n"],"names":["axios","API_KEY","fetchTrendyFilms","response","data","results","console","error","fetchFilmsByName","query","getFilmInformation","filmId","getFilmCredits","cast","getFilmReviews","LinkBack","styled","Link","Wrapper","ImageWrapp","Poster","MovieName","CategoryItem","Category","Description","InfoTitle","InfoList","InfoItem","InfoLink","NavLink","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","then","poster_path","title","original_title","vote_average","release_date","overview","genres","runtime","spoken_languages","to","src","imgUrl","poster","alt","rating","toFixed","map","name","Suspense","fallback","Loader"],"sourceRoot":""}